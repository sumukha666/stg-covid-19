{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.constants.ts","./src/app/app.module.ts","./src/app/components/about-covid/about-covid.component.ts","./src/app/components/about-covid/about-covid.component.html","./src/app/components/common/menu/menu.component.ts","./src/app/components/common/menu/menu.component.html","./src/app/components/graphs/graphs.component.ts","./src/app/components/graphs/graphs.component.html","./src/app/components/header-nav/header-nav.component.ts","./src/app/components/header-nav/header-nav.component.html","./src/app/components/homepage/homepage.component.ts","./src/app/components/homepage/homepage.component.html","./src/app/components/state-graph/state-graph.component.ts","./src/app/components/state-graph/state-graph.component.html","./src/app/components/states/states.component.ts","./src/app/components/states/states.component.html","./src/app/components/table-view/table-view.component.ts","./src/app/components/table-view/table-view.component.html","./src/app/services/covid-api.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { StatesComponent } from './components/states/states.component';\nimport { AboutCovidComponent } from './components/about-covid/about-covid.component';\n\nconst routes: Routes = [\n  {\n    path: \"homepage\",\n    component: HomepageComponent\n  },\n  {\n    path: \"states/:name\",\n    component: StatesComponent\n  },\n  {\n    path:\"aboutcovid\",\n    component: AboutCovidComponent\n  },\n  {\n    path: \"**\",\n    component: HomepageComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Covid-app';\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<router-outlet></router-outlet>","export const supporedLanguages = [{viewValue:\"हिंदी\",value:\"hi\"},{viewValue:\"English\",value:\"en\"}];\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HeaderNavComponent } from \"./components/header-nav/header-nav.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { HttpClientModule, HttpClient } from \"@angular/common/http\";\nimport { TableViewComponent } from \"./components/table-view/table-view.component\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { HomepageComponent } from \"./components/homepage/homepage.component\";\nimport { GraphsComponent } from \"./components/graphs/graphs.component\";\nimport { GoogleChartsModule } from \"angular-google-charts\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { StatesComponent } from \"./components/states/states.component\";\nimport { StateGraphComponent } from \"./components/state-graph/state-graph.component\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { AboutCovidComponent } from \"./components/about-covid/about-covid.component\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\nimport {MenuComponent} from \"./components/common/menu/menu.component\"\n\nexport function TranslationLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderNavComponent,\n    TableViewComponent,\n    HomepageComponent,\n    GraphsComponent,\n    StatesComponent,\n    StateGraphComponent,\n    AboutCovidComponent,\n    MenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    GoogleChartsModule,\n    MatAutocompleteModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: TranslationLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { supporedLanguages } from \"../../app.constants\";\nimport { TranslateService } from \"@ngx-translate/core\";\n@Component({\n  selector: \"app-about-covid\",\n  templateUrl: \"./about-covid.component.html\",\n  styleUrls: [\"./about-covid.component.scss\"],\n})\nexport class AboutCovidComponent implements OnInit {\n  languageArray = supporedLanguages;\n  ngOnInit(): void {\n    this.translateService.setDefaultLang('en');\n  }\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private translateService: TranslateService\n  ) {}\n  onLanguageChange(language: string) {\n    this.translateService.use(language);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    position=\"end\"\n    [fixedInViewport]=\"false\"\n    [mode]=\"'over'\"\n  >\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/homepage\">Home</a>\n      <a mat-list-item routerLink=\"/aboutcovid\">About Covid-19</a>\n      <!-- <a mat-list-item routerLink=\"#\">Help</a> -->\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\"  class=\"display-flex\">\n      <span>Covid-app</span>\n      <div class=\"menuBtns\">\n        <app-menu [initialValue]=\"'en'\" [options]=\"languageArray\" (onItemSelect)=\"onLanguageChange($event)\"></app-menu>\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        class=\"menuBtn\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      </div>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <!-- <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"65%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\n        left\n      </div>\n      <div fxFlex=\"35%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\n          right\n      </div> \n    </div> -->\n\n    <div\n      fxLayout=\"row wrap\"\n      fxLayout.lt-sm=\"column\"\n      fxLayoutGap=\"32px\"\n      fxLayoutAlign=\"stretch\"\n    >\n      <!-- card 1 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title>{{'aboutCovid.card1.header' | translate}}</mat-card-title>\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/coronavirus.jpg\"\n          alt=\"Photo of a person holding coronavirus tag\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card1.para1' | translate}}\n          </p>\n          <p>\n            {{'aboutCovid.card1.para2' | translate}}\n          </p>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- card 2 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title>{{'aboutCovid.card2.header' | translate}}</mat-card-title>\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/what_is_corona.jpg\"\n          alt=\"Photo of a coronavirus\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card2.para1' | translate}}\n          </p>\n          <p>\n            {{'aboutCovid.card2.para2' | translate}}\n          </p>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- card 3 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title>{{'aboutCovid.card3.header' | translate}}</mat-card-title>\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/symptoms.jpg\"\n          alt=\"Photo of a person wearing mask\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card3.para1' | translate}}\n          </p>\n          <ul>\n            <li>\n              {{'aboutCovid.card3.list.point1' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card3.list.point2' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card3.list.point3' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card3.list.point4' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card3.list.point5' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card3.list.point6' | translate}}\n            </li>\n          </ul>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- card 4 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title\n            >{{'aboutCovid.card4.header' | translate}}</mat-card-title\n          >\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/infection.jpg\"\n          alt=\"Photo of a person caughing\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card4.para1' | translate}}\n          </p>\n          <ul>\n            <li>\n              {{'aboutCovid.card4.list.point1' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card4.list.point2' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card4.list.point3' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card4.list.point4' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card4.list.point5' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card4.list.point6' | translate}}\n            </li>\n          </ul>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- card 5 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title>{{'aboutCovid.card5.header' | translate}}</mat-card-title>\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/types.jpg\"\n          alt=\"Photo of a CoronaVirus testing\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card5.para1' | translate}}\n          </p>\n          <ul>\n            <li>\n              {{'aboutCovid.card5.list.point1' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card5.list.point2' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card5.list.point3' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card5.list.point4' | translate}}\n            </li>\n          </ul>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- card 6 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title>{{'aboutCovid.card6.header' | translate}}</mat-card-title>\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/transmission.jpg\"\n          alt=\"Photo of a Transmission among people\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card6.para1' | translate}}\n          </p>\n          <ul>\n            <li>\n              {{'aboutCovid.card6.list.point1' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card6.list.point2' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card6.list.point3' | translate}}\n            </li>\n          </ul>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, Input, OnInit,Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  @Input() options;\n  @Input() initialValue;\n  @Output() onItemSelect = new EventEmitter<string>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onMenuClick(option){\n    this.onItemSelect.emit(option);\n  }\n}\n","<button mat-button [matMenuTriggerFor]=\"beforeMenu\">\n  <mat-icon aria-hidden=\"false\" aria-label=\"Translate icon\">translate</mat-icon>\n</button>\n<mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\">\n  <button mat-menu-item *ngFor=\"let option of options\" [value]=\"option.value\" (click)=\"onMenuClick(option.value)\">\n    {{ option.viewValue }}\n  </button>\n</mat-menu>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectorRef,\n  AfterViewChecked,\n} from \"@angular/core\";\nimport { CovidApiService } from \"../../services/covid-api.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\nimport { TranslateService } from \"@ngx-translate/core\";\n@Component({\n  selector: \"app-graphs\",\n  templateUrl: \"./graphs.component.html\",\n  styleUrls: [\"./graphs.component.scss\"],\n})\nexport class GraphsComponent implements OnInit, AfterViewChecked {\n  chart = [];\n  constructor(\n    private _covidAPI: CovidApiService,\n    private cdRef: ChangeDetectorRef,\n    private _translate: TranslateService\n  ) {}\n\n  title = \"graph.confirmedCase\";\n  type = \"LineChart\";\n  recoveredData = [];\n  confirmData = [];\n  deceasedData = [];\n  data = [];\n  options = {\n    colors: [\"#e0440e\", \"#e6693e\", \"#ec8f6e\", \"#f3b49f\", \"#f6c7b6\"],\n    is3D: true,\n    hAxis: {\n      title: \"Date\",\n    },\n    // vAxis: {\n    //   title: 'Number of COVID-19 confirmed cases'\n    // },\n    pointSize: 5,\n    crosshair: {\n      color: \"#000000\",\n      trigger: \"selection\",\n    },\n  };\n  width =\n    window.innerWidth > 1279\n      ? window.innerWidth * 0.3\n      : window.innerWidth * 0.8;\n  height =\n    window.innerWidth > 1279\n      ? window.innerHeight * 0.4\n      : window.innerHeight * 0.35;\n\n  stateTitle = \"COVID-19 information in\";\n  stateType = \"BarChart\";\n  stateData = [];\n  stateGraphOptions = {};\n\n  stateActiveCases = 0;\n  stateName = \"\";\n  stateConfirmed = 0;\n  stateRecovered = 0;\n  stateDeceased = 0;\n  stateObject = {};\n  selectedStateOption = {key:\"Karnataka\",value:\"Karnataka\"};\n\n  myControl = new FormControl();\n  stateoptions: string[] = [];\n  filteredOptions: Observable<string[]>;\n\n  isGraphError = false;\n  isStateGraphError = false;\n  ngOnInit(): void {\n    // this._translate.get(\"graph.confirmedCase\").subscribe((str)=>this.title=str)\n    this._covidAPI.getCasesByDate().subscribe(\n      (res) => {\n        res[\"cases_time_series\"].forEach((element) => {\n          this.confirmData.push([element[\"date\"], +element[\"totalconfirmed\"]]);\n          this.data.push([element[\"date\"], +element[\"totalconfirmed\"]]);\n          this.deceasedData.push([element[\"date\"], +element[\"totaldeceased\"]]);\n          this.recoveredData.push([\n            element[\"date\"],\n            +element[\"totalrecovered\"],\n          ]);\n        });\n        this.initilizeDailyGraphData(this.confirmData);\n      },\n      (err) => {\n        this.isGraphError = true;\n      }\n    );\n\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n        Object.keys(res).forEach((key) => {\n          if (key !== \"State Unassigned\") {\n            this.stateName = key;\n            Object.keys(res[key]).forEach((district) => {\n              if (district === \"districtData\") {\n                Object.keys(res[key][district]).forEach((city) => {\n                  this.stateActiveCases =\n                    this.stateActiveCases + res[key][district][city][\"active\"];\n                  this.stateConfirmed =\n                    this.stateConfirmed + res[key][district][city][\"confirmed\"];\n                  this.stateRecovered =\n                    this.stateRecovered + res[key][district][city][\"recovered\"];\n                  this.stateDeceased =\n                    this.stateDeceased + res[key][district][city][\"deceased\"];\n                });\n              }\n            });\n            this.stateTitle = \"tableColumn.Karnataka\";\n            this.stateObject[this.stateName] = {\n              active: this.stateActiveCases,\n              recovered: this.stateRecovered,\n              deceased: this.stateDeceased,\n              confirmed: this.stateConfirmed,\n            };\n          }\n        });\n        this.stateData = [\n          [\n            this.returnTranslatedString(\"graph.activeCase\"),\n            this.stateObject[\"Karnataka\"].active,\n          ],\n          [\n            this.returnTranslatedString(\"graph.confirmedCase\"),\n            this.stateObject[\"Karnataka\"].confirmed,\n          ],\n          [\n            this.returnTranslatedString(\"graph.recoveredCase\"),\n            this.stateObject[\"Karnataka\"].recovered,\n          ],\n          [\n            this.returnTranslatedString(\"graph.deceasedCase\"),\n            this.stateObject[\"Karnataka\"].deceased,\n          ],\n        ];\n        //console.log(this.stateObject)\n        this.selectedStateOption.value = this.returnTranslatedString(\"tableColumn.\"+this.selectedStateOption.key)\n        this.stateoptions = Object.keys(this.stateObject);\n      },\n      (err) => {\n        this.isStateGraphError = true;\n      }\n    );\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(\"\"),\n      map((value) => this._filter(value))\n    );\n  }\n\n  ngAfterViewChecked(): void {\n    this.cdRef.detectChanges();\n    \n    this.stateData && this._translate.onLangChange.subscribe(()=>{\n      this.stateData = [\n        [this.returnTranslatedString(\"graph.activeCase\"), this.stateData[0][1]],\n        [\n          this.returnTranslatedString(\"graph.confirmedCase\"),\n          this.stateData[1][1],\n        ],\n        [\n          this.returnTranslatedString(\"graph.recoveredCase\"),\n          this.stateData[2][1],\n        ],\n        [\n          this.returnTranslatedString(\"graph.deceasedCase\"),\n          this.stateData[3][1],\n        ],\n      ];\n      this.selectedStateOption.value = this.returnTranslatedString(\"tableColumn.\"+this.selectedStateOption.key)\n    })\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.stateoptions.filter((option) =>\n      option.toLowerCase().includes(filterValue)\n    );\n  }\n\n  onOptionSelect(event) {\n    let words = event.split(\" \");\n    this.data = this[words[0]];\n    this.title = `graph.${words[1]}`;\n    //this._translate.get(`graph.${words[1]}`).subscribe((str)=>this.title=str)\n    //this.title = `Number of COVID-19 ${words[1]} ${words[2]}`;\n  }\n  last15Days(event) {\n    this.data = this.data.slice(this.data.length - 15, this.data.length);\n    //this.title = this.title\n    // this.title = this.title.includes(\" in last 15 days\")\n    //   ? this.title\n    //   : this.title + \" in last 15 days\";\n  }\n  initilizeDailyGraphData(data) {\n    this.data = data;\n  }\n\n  onStateChange(event) {\n    this.stateData = [\n      [this.returnTranslatedString(\"graph.activeCase\"), this.stateObject[event.option.value].active],\n      [this.returnTranslatedString(\"graph.confirmedCase\"), this.stateObject[event.option.value].confirmed],\n      [this.returnTranslatedString(\"graph.recoveredCase\"), this.stateObject[event.option.value].recovered],\n      [this.returnTranslatedString(\"graph.deceasedCase\"), this.stateObject[event.option.value].deceased],\n    ];\n    this.selectedStateOption = {key: event.option.value, value:this.returnTranslatedString(\"tableColumn.\" + event.option.value)};\n    this.stateTitle =\"tableColumn.\" + event.option.value;\n  }\n\n  returnTranslatedString(key) {\n    let convertedValue;\n    this._translate.get(key).subscribe((str) => (convertedValue = str));\n    return convertedValue;\n  }\n}\n\n// https://www.codeandweb.com/babeledit/tutorials/how-to-translate-your-angular-app-with-ngx-translate\n","<mat-card class=\"example-card\">\n  <div *ngIf=\"isGraphError; else dispGraph\">\n    <mat-card-title>{{(\"graph.graphHeading\" | translate) + \" - \"+ (\"country\" | translate)}}</mat-card-title>\n    <p class=\"dispError\">{{\"errorMessage\" | translate}}</p>\n  </div>\n  <ng-template #dispGraph>\n    <mat-card-header>\n      <mat-card-title>{{(\"graph.graphHeading\" | translate) + \" - \"+ (\"country\" | translate)}}</mat-card-title>\n    </mat-card-header>\n    <div *ngIf=\"data.length === 0; else showGraph\" class=\"textCenter\">\n      <mat-spinner></mat-spinner>\n    </div>\n\n    <ng-template #showGraph>\n      <div class=\"graphId1\">\n        <google-chart\n          [title]=\"title | translate\"\n          [type]=\"type\"\n          [data]=\"data\"\n          [options]=\"options\"\n          [width]=\"width\"\n          [height]=\"height\"\n        >\n        </google-chart>\n      </div>\n    </ng-template>\n\n    <mat-card-actions class=\"display-flex spaceBetween\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>{{\"graph.selectAttribute\" | translate}}</mat-label>\n        <mat-select\n          matNativeControl\n          (valueChange)=\"onOptionSelect($event)\"\n          [value]=\"'confirmData confirmedCase'\"\n        >\n          <mat-option value=\"confirmData confirmedCase\" selected\n            >{{\"graph.confirmedCase\" | translate}}</mat-option\n          >\n          <mat-option value=\"recoveredData recoveredCase\"\n            >{{\"graph.recoveredCase\" | translate}}</mat-option\n          >\n          <mat-option value=\"deceasedData deceasedCase\"\n            >{{\"graph.deceasedCase\" | translate}}</mat-option\n          >\n        </mat-select>\n      </mat-form-field>\n\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"last15Days($event)\"\n        class=\"btn\"\n      >\n      {{\"graph.last15Days\" | translate}}\n      </button>\n    </mat-card-actions>\n  </ng-template>\n</mat-card>\n\n<mat-card class=\"example-card margin-top-10px\">\n  <div *ngIf=\"isStateGraphError; else dispStateGraph\">\n    <mat-card-title>{{(\"graph.graphHeading\" | translate) + \" - \"+ (\"country\" | translate)}}</mat-card-title>\n    <p class=\"dispError\">>{{\"errorMessage\" | translate}}</p>\n  </div>\n  <ng-template #dispStateGraph>\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>{{(\"graph.graphHeading\" | translate) + \" - \"+ (\"country\" | translate)}}</mat-card-title>\n    </mat-card-header>\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width padding-sides-1rem\">\n        <input\n          type=\"text\"\n          placeholder=\"{{'graph.selectState' | translate}}\"\n          aria-label=\"Number\"\n          matInput\n          [formControl]=\"myControl\"\n          [matAutocomplete]=\"auto\"\n          [(ngModel)]=\"selectedStateOption.value\"\n        />\n        <mat-autocomplete\n          #auto=\"matAutocomplete\"\n          (optionSelected)=\"onStateChange($event)\"\n        >\n          <mat-option\n            *ngFor=\"let option of filteredOptions | async\"\n            [value]=\"option\"\n          >\n            {{\"tableColumn.\" + option | translate}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n    <div *ngIf=\"stateData.length === 0; else showStateGraph\" class=\"textCenter\">\n      <mat-spinner></mat-spinner>\n    </div>\n    <ng-template #showStateGraph>\n      <div class=\"graphId2\">\n        <google-chart\n          [title]=\"(stateTitle | translate) +' ' +('graph.graphHeading' | translate)\"\n          [type]=\"stateType\"\n          [data]=\"stateData\"\n          [options]=\"stateoptions\"\n          [width]=\"width\"\n          [height]=\"height\"\n        >\n        </google-chart>\n      </div>\n    </ng-template>\n  </ng-template>\n</mat-card>\n<!-- \"[stateoptions[0] | translate, stateoptions[1] | translate, stateoptions[2] | translate, stateoptions[3] | translate] -->","import { Component, Input, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport {supporedLanguages} from \"../../app.constants\";\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: \"app-header-nav\",\n  templateUrl: \"./header-nav.component.html\",\n  styleUrls: [\"./header-nav.component.scss\"],\n})\nexport class HeaderNavComponent implements OnInit {\n  @Input() columnsToDisplay;\n  @Input() stateNameToDisplay;\n  @Input() showStateGraph;\n  @Input() displayBackButton;\n  @Input() backToUrl;\n  @Input() isState;\n  languageArray=supporedLanguages;\n\n  ngOnInit() {\n    //const browserLang = this.translateService.getBrowserLang();\n    // if(supporedLanguages.indexOf(browserLang) > -1){\n    //   this.translateService.setDefaultLang(browserLang);\n    // } else {\n      this.translateService.setDefaultLang('en');\n    // }\n  }\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private route: Router,\n    private translateService: TranslateService\n  ) {}\n  \n\n  onClickBackButton() {\n    this.route.navigate([this.backToUrl]);\n  }\n\n  onLanguageChange(language: string){\n    this.translateService.use(language);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    position=\"end\"\n    [fixedInViewport]=\"false\"\n    [mode]=\"'over'\"\n  >\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/homepage\">Home</a>\n      <a mat-list-item routerLink=\"/aboutcovid\">About Covid-19</a>\n      <!-- <a mat-list-item routerLink=\"#\">Help</a> -->\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\" class=\"display-flex\">\n      <button\n        type=\"button\"\n        aria-label=\"toolbar back button\"\n        mat-icon-button\n        *ngIf=\"displayBackButton\"\n        (click)= \"onClickBackButton()\"\n      >\n      <mat-icon>arrow_back_ios</mat-icon>\n      </button>\n      <span>Covid-app</span>\n      <div class=\"menuBtns\">\n      <app-menu [initialValue]=\"'en'\" [options]=\"languageArray\" (onItemSelect)=\"onLanguageChange($event)\"></app-menu>\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        class=\"\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n    </div>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"65%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxFlex.md=\"100%\">\n        <app-table-view\n          [columnsToDisplay]=\"columnsToDisplay\"\n          [isState]=\"isState\"\n          [stateNameToDisplay]=\"stateNameToDisplay\"\n          [disableRowClick]=\"showStateGraph\"\n        ></app-table-view>\n      </div>\n      <div fxFlex=\"35%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxFlex.md=\"100%\">\n        <div *ngIf=\"showStateGraph; else indaGraphs\">\n          <app-state-graph></app-state-graph>\n        </div>\n        <ng-template #indaGraphs>\n          <app-graphs></app-graphs>\n        </ng-template>\n      </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { map } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { CovidApiService } from '../../services/covid-api.service'\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor(private _covidAPI: CovidApiService) { }\n  columnsToDisplay = [\"State\", \"Confirmed\", \"Active\", \"Recovered\", \"Deceased\"];\n  ngOnInit(): void {\n\n    }\n\n}\n","<app-header-nav [columnsToDisplay]=\"columnsToDisplay\"></app-header-nav>","import { Component, OnInit, AfterViewChecked,ChangeDetectorRef } from \"@angular/core\";\nimport { CovidApiService } from \"../../services/covid-api.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\n@Component({\n  selector: \"app-state-graph\",\n  templateUrl: \"./state-graph.component.html\",\n  styleUrls: [\"./state-graph.component.scss\"],\n})\nexport class StateGraphComponent implements OnInit,AfterViewChecked {\n  chart = [];\n  constructor(\n    private _covidAPI: CovidApiService,\n    private router: ActivatedRoute,\n    private cdRef: ChangeDetectorRef,\n    private _translate: TranslateService\n  ) {}\n\n  width = (window.innerWidth >1279) ? window.innerWidth *0.30 :window.innerWidth*0.8;\n  height = (window.innerWidth >1279) ? window.innerHeight *0.4 :window.innerHeight*0.35;\n\n  districtTitle = \"COVID-19 information in\";\n  districtType = \"BarChart\";\n  districtData = [];\n  districtGraphOptions = {};\n\n  districtActiveCases = 0;\n  districtName = \"\";\n  districtConfirmed = 0;\n  districtRecovered = 0;\n  districtDeceased = 0;\n  districtObject = {};\n  stateName = \"\";\n\n  myControl = new FormControl();\n  stateoptions: string[] = [];\n  filteredOptions: Observable<string[]>;\n  selectedDistrict = {key:\"\",value:\"\"};\n\n  isGraphError = false;\n  ngOnInit(): void {\n    this.stateName = this.router.snapshot.params.name;\n\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n        let districtsObj = res[this.stateName][\"districtData\"];\n        this.districtObject = districtsObj;\n        this.stateoptions = Object.keys(districtsObj);\n        console.log(this.stateoptions)\n        this.districtData = [\n          [this.returnTranslatedString(\"graph.activeCase\"), districtsObj[this.stateoptions[0]].active],\n          [this.returnTranslatedString(\"graph.confirmedCase\"), districtsObj[this.stateoptions[0]].confirmed],\n          [ this.returnTranslatedString(\"graph.recoveredCase\"), districtsObj[this.stateoptions[0]].recovered],\n          [this.returnTranslatedString(\"graph.deceasedCase\"), districtsObj[this.stateoptions[0]].deceased],\n        ];\n        this.districtTitle = `stateColumn.${this.stateName}.${this.stateoptions[0]}` ;\n        this.selectedDistrict = { key:this.stateoptions[0], value: this.returnTranslatedString(`stateColumn.${this.stateName}.${this.stateoptions[0]}`) };\n      },\n      (err) => {\n        this.isGraphError = true;\n      }\n    );\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(\"\"),\n      map((value) => this._filter(value))\n    );\n  }\n\n  ngAfterViewChecked(): void {\n    this.cdRef.detectChanges();\n    this.districtData && this._translate.onLangChange.subscribe(()=>{\n      this.selectedDistrict.value = this.returnTranslatedString(`stateColumn.${this.stateName}.${this.selectedDistrict.key}`)\n      this.districtData = [\n        [this.returnTranslatedString(\"graph.activeCase\"), this.districtData[0][1]],\n        [\n          this.returnTranslatedString(\"graph.confirmedCase\"),\n          this.districtData[1][1],\n        ],\n        [\n          this.returnTranslatedString(\"graph.recoveredCase\"),\n          this.districtData[2][1],\n        ],\n        [\n          this.returnTranslatedString(\"graph.deceasedCase\"),\n          this.districtData[3][1],\n        ],\n      ];\n    })\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.stateoptions.filter((option) =>\n      option.toLowerCase().includes(filterValue)\n    );\n  }\n\n  onStateChange(event) {\n    this.districtData = [\n      [this.returnTranslatedString(\"graph.activeCase\"), this.districtObject[event.option.value].active],\n      [this.returnTranslatedString(\"graph.confirmedCase\"), this.districtObject[event.option.value].confirmed],\n      [this.returnTranslatedString(\"graph.recoveredCase\"), this.districtObject[event.option.value].recovered],\n      [this.returnTranslatedString(\"graph.deceasedCase\"), this.districtObject[event.option.value].deceased],\n    ];\n    this.selectedDistrict.key = event.option.value;\n    this.selectedDistrict.value = this.returnTranslatedString( `stateColumn.${this.stateName}.${event.option.value}`);\n    this.districtTitle = `stateColumn.${this.stateName}.${event.option.value}`;\n  }\n\n  returnTranslatedString(key) {\n    let convertedValue;\n    this._translate.get(key).subscribe((str) => (convertedValue = str));\n    return convertedValue;\n  }\n}\n","<mat-card class=\"example-card margin-1rem\">\n  <div *ngIf=\"isGraphError; else dispGraph\">\n    <mat-card-title>Covid-19 Cases in India</mat-card-title>\n    <p class=\"dispError\">Something went wrong, please try again later</p>\n  </div>\n  <ng-template #dispGraph>\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>{{(\"graph.graphHeading\" | translate) +\" - \"+ (\"tableColumn.\"+ stateName | translate)}}</mat-card-title>\n    </mat-card-header>\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width padding-sides-1rem\">\n        <input\n          type=\"text\"\n          placeholder=\"{{'graph.selectDistrict' | translate}}\"\n          aria-label=\"Number\"\n          matInput\n          [formControl]=\"myControl\"\n          [matAutocomplete]=\"auto\"\n          [(ngModel)]=\"selectedDistrict.value\"\n        />\n        <mat-autocomplete\n          #auto=\"matAutocomplete\"\n          (optionSelected)=\"onStateChange($event)\"\n        >\n          <mat-option\n            *ngFor=\"let option of filteredOptions | async\"\n            [value]=\"option\"\n          >\n            {{ 'stateColumn.'+this.stateName+'.'+option | translate }}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n    <div *ngIf=\"districtData.length === 0; else showGraph\" class=\"textCenter\">\n      <mat-spinner></mat-spinner>\n    </div>\n    <ng-template #showGraph>\n      <div class=\"graphId\">\n        <google-chart\n          [title]=\"(districtTitle | translate) +' ' +('graph.graphHeading' | translate)\"\n          [type]=\"districtType\"\n          [data]=\"districtData\"\n          [options]=\"stateoptions\"\n          [width]=\"width\"\n          [height]=\"height\"\n        >\n        </google-chart>\n      </div>\n    </ng-template>\n  </ng-template>\n</mat-card>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n@Component({\n  selector: \"app-states\",\n  templateUrl: \"./states.component.html\",\n  styleUrls: [\"./states.component.scss\"],\n})\nexport class StatesComponent implements OnInit {\n  constructor(private router: ActivatedRoute) {}\n  stateName;\n  columnsToDisplay = [\n    \"District\",\n    \"Confirmed\",\n    \"Active\",\n    \"Recovered\",\n    \"Deceased\",\n  ];\n  ngOnInit(): void {\n    this.stateName = this.router.snapshot.params.name;\n  }\n}\n","<app-header-nav\n  [columnsToDisplay]=\"columnsToDisplay\"\n  [isState]=\"true\"\n  [stateNameToDisplay]=\"stateName\"\n  [showStateGraph]=\"true\"\n  [displayBackButton]=\"true\"\n  [backToUrl]=\"'/homepage'\"\n></app-header-nav>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CovidApiService } from '../../services/covid-api.service'\nimport { Router,ActivatedRoute } from '@angular/router';\nimport {Sort} from '@angular/material/sort';\n@Component({\n  selector: 'app-table-view',\n  templateUrl: './table-view.component.html',\n  styleUrls: ['./table-view.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TableViewComponent implements OnInit {\n  @Input() columnsToDisplay;\n  @Input() stateNameToDisplay;\n  @Input() disableRowClick;\n  @Input() isState;\n  rows = [];\n  delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n  State = \"\"\n  Confirmed = 0\n  Recovered = 0\n  Active = 0\n  Deceased = 0\n  description = \"\"\n  dataSource\n  expandedElement: StateCases | null;\n  constructor(private _covidAPI: CovidApiService, private _router: Router,private router: ActivatedRoute) {}\n  initilizeData(data) {\n    this.dataSource = new MatTableDataSource(data);\n  }\n  getStateDetails() {\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n        switch (this.columnsToDisplay[0]) {\n          case \"District\":\n            let districtsObj = res[this.stateNameToDisplay][\"districtData\"]\n            this.rows = new Array([])\n            this.delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n            for (let i in districtsObj) {\n              //console.log(districtsObj[i][\"delta\"])\n              this.delta[\"Confirmed\"] = districtsObj[i][\"delta\"][\"confirmed\"]\n              //this.delta[\"Active\"] = parseInt(this.delta[\"Active\"] )+ parseInt(res[key][district][city][\"delta\"][\"active\"])\n              this.delta[\"Recovered\"] = (districtsObj[i][\"delta\"][\"recovered\"])\n              this.delta[\"Deceased\"] = (districtsObj[i][\"delta\"][\"recovered\"])\n              this.rows.push({\n                District: i, Confirmed: districtsObj[i]['confirmed'], Active: districtsObj[i]['active'], Recovered: districtsObj[i]['recovered'],\n                Deceased: districtsObj[i]['deceased'], description: \"some\", \"delta\": this.delta\n              })\n            }\n\n            this.rows.shift()\n            //console.log(this.rows)\n            this.rows.sort((a,b)=>a.Confiirmed-b.Confirmed);\n            this.initilizeData(this.rows.reverse())\n            break;\n          case \"State\":\n            Object.keys(res).forEach(key => {\n              if (key !== \"State Unassigned\") {\n                this.State = key\n                this.Active = 0\n                this.Confirmed = 0\n                this.Recovered = 0\n                this.Deceased = 0\n                this.delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n                Object.keys(res[key]).forEach(district => {\n                  if (district === \"districtData\") {\n                    Object.keys(res[key][district]).forEach(city => {\n                      //console.log(res[key][district][city]);\n                      this.Active = this.Active + res[key][district][city][\"active\"];\n                      this.Confirmed = this.Confirmed + res[key][district][city][\"confirmed\"];\n                      this.Recovered = this.Recovered + res[key][district][city][\"recovered\"];\n                      this.Deceased = this.Deceased + res[key][district][city][\"deceased\"]\n                      //console.log(this.delta[\"Confirmed\"])\n                      //console.log(res[key][district][city][\"delta\"])\n                      this.delta[\"Confirmed\"] = this.delta[\"Confirmed\"] + parseInt(res[key][district][city][\"delta\"][\"confirmed\"])\n                      //this.delta[\"Active\"] = parseInt(this.delta[\"Active\"] )+ parseInt(res[key][district][city][\"delta\"][\"active\"])\n                      this.delta[\"Recovered\"] = (this.delta[\"Recovered\"]) + parseInt(res[key][district][city][\"delta\"][\"recovered\"])\n                      this.delta[\"Deceased\"] = (this.delta[\"Deceased\"]) + parseInt(res[key][district][city][\"delta\"][\"deceased\"])\n                    })\n                  }\n                })\n                this.rows.push(new Object({\n                  State: this.State, Confirmed: (this.Confirmed), Active: (this.Active),\n                  Recovered: (this.Recovered), Deceased: (this.Deceased), description: \"some\",\n                  delta: { Confirmed: this.delta[\"Confirmed\"], Recovered: this.delta[\"Recovered\"], Deceased: this.delta[\"Deceased\"] }\n                }));\n              }\n            })\n            this.rows.sort((a,b)=>a.Confirmed-b.Confirmed);\n            this.initilizeData(this.rows.reverse())\n            break;\n\n        }\n      })\n  }\n  ngOnInit() {\n    this.rows.splice(0, this.rows.length)\n    this.getStateDetails()\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  openStateDetails(event, row) {\n    this._router.navigate(['/states/' + row.State])\n  }\n  convertNumberIntoK(value) {\n    if (value >= 1000000) {\n      value = Math.round(value / 1000000) + \"M\"\n      return value;\n    }\n    else if (value >= 1000) {\n      value = Math.round(value / 1000) + \"K\";\n      return value\n    } else if(!isNaN(value)) {\n      return value;\n    }\n    return !this.stateNameToDisplay ? (\"tableColumn.\" + value) : (`stateColumn.${this.stateNameToDisplay}.${value}`);\n  }\n\n  sortData(sort: Sort) {\n    const data = this.rows.slice();\n    if (!sort.active || sort.direction === '') {\n      this.initilizeData(this.rows);\n      return;\n    }\n\n    this.rows = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'State': return compare(a.State, b.State, isAsc);\n        case 'District': return compare(a.District, b.District, isAsc);\n        case 'Confirmed': return compare(a.Confirmed, b.Confirmed, isAsc);\n        case 'Active': return compare(a.Active, b.Active, isAsc);\n        case 'Recovered': return compare(a.Recovered, b.Recovered, isAsc);\n        case 'Deceased': return compare(a.Deceased, b.Deceased, isAsc);\n        default: return 0;\n      }\n    });\n    this.initilizeData(this.rows)\n  }\n\n}\n\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\nexport interface StateCases {\n  State: string;\n  Confirmed: number;\n  Active: number;\n  Recovered: number;\n  Deceased: number;\n}\n","<form class=\"display-flex\">\n  <mat-form-field>\n    <mat-label *ngIf=\"disableRowClick; else elseState\"\n      >{{'graph.selectDistrict'|translate}}</mat-label\n    >\n    <ng-template #elseState>\n      <mat-label>{{'graph.selectState' | translate}}</mat-label>\n    </ng-template>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"\"\n      #input\n    />\n  </mat-form-field>\n  <!-- <button mat-raised-button color=\"primary\" class=\"menuBtn\" [matMenuTriggerFor]=\"menu\">Menu</button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item (click)=\"onSortByName()\">Sort By Name</button>\n    <button mat-menu-item (click)=\"onSortByCases()\" >Sort By Cases</button>\n  </mat-menu> -->\n</form>\n<table\n  mat-table\n  [dataSource]=\"dataSource\"\n  multiTemplateDataRows\n  class=\"mat-elevation-z8\"\n  matSort\n  (matSortChange)=\"sortData($event)\"\n  class=\"tableView\"\n>\n  <ng-container\n    matColumnDef=\"{{ column }}\"\n    *ngFor=\"let column of columnsToDisplay\"\n  >\n    <th\n      mat-header-cell\n      *matHeaderCellDef\n      class=\"columHeader mobileView\"\n      [mat-sort-header]=\"column\"\n    >\n      {{ 'tableHeader.'+column.toLowerCase()  | translate}}\n    </th>\n    <td mat-cell *matCellDef=\"let element\">\n      <!-- <div [matTooltip]=\"element[column]\" [matTooltipPosition]=\"\" aria-label=\"Button that displays a tooltip when focused or hovered over\">\n      <span class=\"deltaValue\" *ngIf=\"element['delta'][column]>0\"><mat-icon class=\"iconId\">arrow_upward</mat-icon>{{element['delta'][column]}}</span>\n      {{ convertNumberIntoK(element[column])}} \n          </div> -->\n      <mat-list role=\"list\">\n        <div *ngIf=\"element['delta']['Confirm'] > 0; else noRowReq\">\n          <div *ngIf=\"element['delta'][column] > 0; else nonDelta\">\n            <mat-list-item\n              role=\"listitem\"\n              class=\"reduceMargin mobileView tableRows\"\n            >\n              {{ convertNumberIntoK(element[column]) | translate}}</mat-list-item\n            >\n            <mat-list-item\n              role=\"listitem\"\n              class=\"reduceMargin mobileView tableRows\"\n            >\n              {{ element[\"delta\"][column] }}\n            </mat-list-item>\n          </div>\n          <ng-template #nonDelta>\n            <mat-list-item\n              role=\"listitem\"\n              class=\"reduceMargin mobileView tableRows\"\n            >\n              {{  convertNumberIntoK(element[column]) | translate}}\n            </mat-list-item>\n            <mat-list-item\n              role=\"listitem\"\n              class=\"reduceMargin mobileView tableRows\"\n            >\n              {{  convertNumberIntoK(element[column]) | translate}}\n            </mat-list-item>\n          </ng-template>\n        </div>\n        <ng-template #noRowReq>\n          <mat-list-item\n            role=\"listitem\"\n            class=\"reduceMargin mobileView tableRows\"\n          >\n          {{   convertNumberIntoK(element[column]) | translate }}\n            <!-- {{ Object.prototype.toString.call((element[column]) === '[object String]' ? ('tableColumn.' + element[column] | translate) : convertNumberIntoK(element[column]) }} -->\n          </mat-list-item>\n        </ng-template>\n      </mat-list>\n    </td>\n  </ng-container>\n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td\n      mat-cell\n      *matCellDef=\"let element\"\n      [attr.colspan]=\"columnsToDisplay.length\"\n    >\n      <div\n        class=\"example-element-detail\"\n        [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\"\n      >\n        <div class=\"example-element-description marginRight\">\n          <button\n            mat-stroked-button\n            color=\"primary\"\n            class=\"tableBtn\"\n            (click)=\"openStateDetails($event, element)\"\n          >\n            <mat-icon class=\"icon-display\">description</mat-icon> view district\n            level status\n          </button>\n          <!-- <span class=\"example-element-description-attribution\"> </span> -->\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr\n    mat-row\n    *matRowDef=\"let element; columns: columnsToDisplay\"\n    class=\"example-element-row\"\n    [class.example-expanded-row]=\"expandedElement === element\"\n    (click)=\"expandedElement = expandedElement === element ? null : element\"\n  ></tr>\n  <div *ngIf=\"!disableRowClick\">\n    <tr\n      mat-row\n      *matRowDef=\"let row; columns: ['expandedDetail']\"\n      class=\"example-detail-row\"\n    ></tr>\n  </div>\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">\n      No data matching the filter \"{{ input.value }}\"\n    </td>\n  </tr>\n</table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidApiService {\n  private _registerUrl = \"https://api.covid19india.org\"; \n  constructor(private http: HttpClient) { }\n  getStates() {\n    return this.http.get<any>(this._registerUrl+\"/state_district_wise.json\");\n  }\n  getCasesByDate(){\n    return this.http.get<any>(this._registerUrl+\"/data.json\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}