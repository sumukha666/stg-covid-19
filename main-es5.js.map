{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.constants.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/about-covid/about-covid.component.ts","webpack:///src/app/components/about-covid/about-covid.component.html","webpack:///src/app/components/common/menu/menu.component.ts","webpack:///src/app/components/common/menu/menu.component.html","webpack:///src/app/components/graphs/graphs.component.ts","webpack:///src/app/components/graphs/graphs.component.html","webpack:///src/app/components/header-nav/header-nav.component.ts","webpack:///src/app/components/header-nav/header-nav.component.html","webpack:///src/app/components/homepage/homepage.component.ts","webpack:///src/app/components/homepage/homepage.component.html","webpack:///src/app/components/state-graph/state-graph.component.ts","webpack:///src/app/components/state-graph/state-graph.component.html","webpack:///src/app/components/states/states.component.ts","webpack:///src/app/components/states/states.component.html","webpack:///src/app/components/table-view/table-view.component.ts","webpack:///src/app/components/table-view/table-view.component.html","webpack:///src/app/services/covid-api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","supporedLanguages","viewValue","value","TranslationLoaderFactory","http","AppModule","loader","provide","useFactory","deps","declarations","providers","bootstrap","AboutCovidComponent","breakpointObserver","translateService","languageArray","isHandset$","observe","Handset","pipe","result","matches","setDefaultLang","language","use","onLanguageChange","MenuComponent","onItemSelect","option","emit","GraphsComponent","_covidAPI","cdRef","_translate","chart","type","recoveredData","confirmData","deceasedData","data","options","colors","is3D","hAxis","pointSize","crosshair","color","trigger","width","window","innerWidth","height","innerHeight","stateTitle","stateType","stateData","stateGraphOptions","stateActiveCases","stateName","stateConfirmed","stateRecovered","stateDeceased","stateObject","selectedStateOption","key","myControl","stateoptions","isGraphError","isStateGraphError","getCasesByDate","subscribe","res","forEach","element","push","initilizeDailyGraphData","err","getStates","Object","district","city","active","recovered","deceased","confirmed","returnTranslatedString","filteredOptions","valueChanges","_filter","detectChanges","onLangChange","filterValue","toLowerCase","filter","includes","event","words","split","slice","length","convertedValue","get","str","HeaderNavComponent","route","navigate","backToUrl","HomepageComponent","columnsToDisplay","StateGraphComponent","router","districtTitle","districtType","districtData","districtGraphOptions","districtActiveCases","districtName","districtConfirmed","districtRecovered","districtDeceased","districtObject","selectedDistrict","snapshot","params","name","districtsObj","console","log","StatesComponent","TableViewComponent","_router","rows","delta","State","Confirmed","Recovered","Active","Deceased","description","dataSource","stateNameToDisplay","Array","i","District","shift","sort","a","b","Confiirmed","initilizeData","reverse","parseInt","splice","getStateDetails","target","trim","row","Math","round","isNaN","direction","isAsc","compare","applyFilter","sortData","minHeight","animations","CovidApiService","_registerUrl","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { StatesComponent } from './components/states/states.component';\nimport { AboutCovidComponent } from './components/about-covid/about-covid.component';\n\nconst routes: Routes = [\n  {\n    path: \"homepage\",\n    component: HomepageComponent\n  },\n  {\n    path: \"states/:name\",\n    component: StatesComponent\n  },\n  {\n    path:\"aboutcovid\",\n    component: AboutCovidComponent\n  },\n  {\n    path: \"**\",\n    component: HomepageComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Covid-app';\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<router-outlet></router-outlet>","export const supporedLanguages = [{viewValue:\"हिंदी\",value:\"hi\"},{viewValue:\"English\",value:\"en\"}];\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HeaderNavComponent } from \"./components/header-nav/header-nav.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { HttpClientModule, HttpClient } from \"@angular/common/http\";\nimport { TableViewComponent } from \"./components/table-view/table-view.component\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { HomepageComponent } from \"./components/homepage/homepage.component\";\nimport { GraphsComponent } from \"./components/graphs/graphs.component\";\nimport { GoogleChartsModule } from \"angular-google-charts\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { StatesComponent } from \"./components/states/states.component\";\nimport { StateGraphComponent } from \"./components/state-graph/state-graph.component\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { AboutCovidComponent } from \"./components/about-covid/about-covid.component\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\nimport {MenuComponent} from \"./components/common/menu/menu.component\"\n\nexport function TranslationLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderNavComponent,\n    TableViewComponent,\n    HomepageComponent,\n    GraphsComponent,\n    StatesComponent,\n    StateGraphComponent,\n    AboutCovidComponent,\n    MenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    GoogleChartsModule,\n    MatAutocompleteModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: TranslationLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { supporedLanguages } from \"../../app.constants\";\nimport { TranslateService } from \"@ngx-translate/core\";\n@Component({\n  selector: \"app-about-covid\",\n  templateUrl: \"./about-covid.component.html\",\n  styleUrls: [\"./about-covid.component.scss\"],\n})\nexport class AboutCovidComponent implements OnInit {\n  languageArray = supporedLanguages;\n  ngOnInit(): void {\n    this.translateService.setDefaultLang('en');\n  }\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private translateService: TranslateService\n  ) {}\n  onLanguageChange(language: string) {\n    this.translateService.use(language);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    position=\"end\"\n    [fixedInViewport]=\"false\"\n    [mode]=\"'over'\"\n  >\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/homepage\">Home</a>\n      <a mat-list-item routerLink=\"/aboutcovid\">About Covid-19</a>\n      <!-- <a mat-list-item routerLink=\"#\">Help</a> -->\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\"  class=\"display-flex\">\n      <span>Covid-app</span>\n      <div class=\"menuBtns\">\n        <app-menu [initialValue]=\"'en'\" [options]=\"languageArray\" (onItemSelect)=\"onLanguageChange($event)\"></app-menu>\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        class=\"menuBtn\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      </div>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <!-- <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"65%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\n        left\n      </div>\n      <div fxFlex=\"35%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\n          right\n      </div> \n    </div> -->\n\n    <div\n      fxLayout=\"row wrap\"\n      fxLayout.lt-sm=\"column\"\n      fxLayoutGap=\"32px\"\n      fxLayoutAlign=\"stretch\"\n    >\n      <!-- card 1 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title>{{'aboutCovid.card1.header' | translate}}</mat-card-title>\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/coronavirus.jpg\"\n          alt=\"Photo of a person holding coronavirus tag\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card1.para1' | translate}}\n          </p>\n          <p>\n            {{'aboutCovid.card1.para2' | translate}}\n          </p>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- card 2 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title>{{'aboutCovid.card2.header' | translate}}</mat-card-title>\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/what_is_corona.jpg\"\n          alt=\"Photo of a coronavirus\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card2.para1' | translate}}\n          </p>\n          <p>\n            {{'aboutCovid.card2.para2' | translate}}\n          </p>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- card 3 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title>{{'aboutCovid.card3.header' | translate}}</mat-card-title>\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/symptoms.jpg\"\n          alt=\"Photo of a person wearing mask\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card3.para1' | translate}}\n          </p>\n          <ul>\n            <li>\n              {{'aboutCovid.card3.list.point1' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card3.list.point2' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card3.list.point3' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card3.list.point4' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card3.list.point5' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card3.list.point6' | translate}}\n            </li>\n          </ul>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- card 4 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title\n            >{{'aboutCovid.card4.header' | translate}}</mat-card-title\n          >\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/infection.jpg\"\n          alt=\"Photo of a person caughing\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card4.para1' | translate}}\n          </p>\n          <ul>\n            <li>\n              {{'aboutCovid.card4.list.point1' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card4.list.point2' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card4.list.point3' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card4.list.point4' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card4.list.point5' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card4.list.point6' | translate}}\n            </li>\n          </ul>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- card 5 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title>{{'aboutCovid.card5.header' | translate}}</mat-card-title>\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/types.jpg\"\n          alt=\"Photo of a CoronaVirus testing\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card5.para1' | translate}}\n          </p>\n          <ul>\n            <li>\n              {{'aboutCovid.card5.list.point1' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card5.list.point2' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card5.list.point3' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card5.list.point4' | translate}}\n            </li>\n          </ul>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- card 6 -->\n      <mat-card\n        class=\"example-card margin-top\"\n        fxFlex=\"0 1 calc(33.3% - 32px)\"\n        fxFlex.lt-md=\"0 1 calc(50% - 32px)\"\n        fxFlex.lt-sm=\"100%\"\n        [style.height]=\"'100%'\"\n      >\n        <mat-card-header>\n          <mat-card-title>{{'aboutCovid.card6.header' | translate}}</mat-card-title>\n        </mat-card-header>\n        <img\n          mat-card-image\n          src=\"assets/images/transmission.jpg\"\n          alt=\"Photo of a Transmission among people\"\n          class=\"cardImage\"\n        />\n        <mat-card-content>\n          <p>\n            {{'aboutCovid.card6.para1' | translate}}\n          </p>\n          <ul>\n            <li>\n              {{'aboutCovid.card6.list.point1' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card6.list.point2' | translate}}\n            </li>\n            <li>\n              {{'aboutCovid.card6.list.point3' | translate}}\n            </li>\n          </ul>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, Input, OnInit,Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  @Input() options;\n  @Input() initialValue;\n  @Output() onItemSelect = new EventEmitter<string>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onMenuClick(option){\n    this.onItemSelect.emit(option);\n  }\n}\n","<button mat-button [matMenuTriggerFor]=\"beforeMenu\">\n  <mat-icon aria-hidden=\"false\" aria-label=\"Translate icon\">translate</mat-icon>\n</button>\n<mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\">\n  <button mat-menu-item *ngFor=\"let option of options\" [value]=\"option.value\" (click)=\"onMenuClick(option.value)\">\n    {{ option.viewValue }}\n  </button>\n</mat-menu>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectorRef,\n  AfterViewChecked,\n} from \"@angular/core\";\nimport { CovidApiService } from \"../../services/covid-api.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\nimport { TranslateService } from \"@ngx-translate/core\";\n@Component({\n  selector: \"app-graphs\",\n  templateUrl: \"./graphs.component.html\",\n  styleUrls: [\"./graphs.component.scss\"],\n})\nexport class GraphsComponent implements OnInit, AfterViewChecked {\n  chart = [];\n  constructor(\n    private _covidAPI: CovidApiService,\n    private cdRef: ChangeDetectorRef,\n    private _translate: TranslateService\n  ) {}\n\n  title = \"graph.confirmedCase\";\n  type = \"LineChart\";\n  recoveredData = [];\n  confirmData = [];\n  deceasedData = [];\n  data = [];\n  options = {\n    colors: [\"#e0440e\", \"#e6693e\", \"#ec8f6e\", \"#f3b49f\", \"#f6c7b6\"],\n    is3D: true,\n    hAxis: {\n      title: \"Date\",\n    },\n    // vAxis: {\n    //   title: 'Number of COVID-19 confirmed cases'\n    // },\n    pointSize: 5,\n    crosshair: {\n      color: \"#000000\",\n      trigger: \"selection\",\n    },\n  };\n  width =\n    window.innerWidth > 1279\n      ? window.innerWidth * 0.3\n      : window.innerWidth * 0.8;\n  height =\n    window.innerWidth > 1279\n      ? window.innerHeight * 0.4\n      : window.innerHeight * 0.35;\n\n  stateTitle = \"COVID-19 information in\";\n  stateType = \"BarChart\";\n  stateData = [];\n  stateGraphOptions = {};\n\n  stateActiveCases = 0;\n  stateName = \"\";\n  stateConfirmed = 0;\n  stateRecovered = 0;\n  stateDeceased = 0;\n  stateObject = {};\n  selectedStateOption = {key:\"Karnataka\",value:\"Karnataka\"};\n\n  myControl = new FormControl();\n  stateoptions: string[] = [];\n  filteredOptions: Observable<string[]>;\n\n  isGraphError = false;\n  isStateGraphError = false;\n  ngOnInit(): void {\n    // this._translate.get(\"graph.confirmedCase\").subscribe((str)=>this.title=str)\n    this._covidAPI.getCasesByDate().subscribe(\n      (res) => {\n        res[\"cases_time_series\"].forEach((element) => {\n          this.confirmData.push([element[\"date\"], +element[\"totalconfirmed\"]]);\n          this.data.push([element[\"date\"], +element[\"totalconfirmed\"]]);\n          this.deceasedData.push([element[\"date\"], +element[\"totaldeceased\"]]);\n          this.recoveredData.push([\n            element[\"date\"],\n            +element[\"totalrecovered\"],\n          ]);\n        });\n        this.initilizeDailyGraphData(this.confirmData);\n      },\n      (err) => {\n        this.isGraphError = true;\n      }\n    );\n\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n        Object.keys(res).forEach((key) => {\n          if (key !== \"State Unassigned\") {\n            this.stateName = key;\n            Object.keys(res[key]).forEach((district) => {\n              if (district === \"districtData\") {\n                Object.keys(res[key][district]).forEach((city) => {\n                  this.stateActiveCases =\n                    this.stateActiveCases + res[key][district][city][\"active\"];\n                  this.stateConfirmed =\n                    this.stateConfirmed + res[key][district][city][\"confirmed\"];\n                  this.stateRecovered =\n                    this.stateRecovered + res[key][district][city][\"recovered\"];\n                  this.stateDeceased =\n                    this.stateDeceased + res[key][district][city][\"deceased\"];\n                });\n              }\n            });\n            this.stateTitle = \"tableColumn.Karnataka\";\n            this.stateObject[this.stateName] = {\n              active: this.stateActiveCases,\n              recovered: this.stateRecovered,\n              deceased: this.stateDeceased,\n              confirmed: this.stateConfirmed,\n            };\n          }\n        });\n        this.stateData = [\n          [\n            this.returnTranslatedString(\"graph.activeCase\"),\n            this.stateObject[\"Karnataka\"].active,\n          ],\n          [\n            this.returnTranslatedString(\"graph.confirmedCase\"),\n            this.stateObject[\"Karnataka\"].confirmed,\n          ],\n          [\n            this.returnTranslatedString(\"graph.recoveredCase\"),\n            this.stateObject[\"Karnataka\"].recovered,\n          ],\n          [\n            this.returnTranslatedString(\"graph.deceasedCase\"),\n            this.stateObject[\"Karnataka\"].deceased,\n          ],\n        ];\n        //console.log(this.stateObject)\n        this.selectedStateOption.value = this.returnTranslatedString(\"tableColumn.\"+this.selectedStateOption.key)\n        this.stateoptions = Object.keys(this.stateObject);\n      },\n      (err) => {\n        this.isStateGraphError = true;\n      }\n    );\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(\"\"),\n      map((value) => this._filter(value))\n    );\n  }\n\n  ngAfterViewChecked(): void {\n    this.cdRef.detectChanges();\n    \n    this.stateData && this._translate.onLangChange.subscribe(()=>{\n      this.stateData = [\n        [this.returnTranslatedString(\"graph.activeCase\"), this.stateData[0][1]],\n        [\n          this.returnTranslatedString(\"graph.confirmedCase\"),\n          this.stateData[1][1],\n        ],\n        [\n          this.returnTranslatedString(\"graph.recoveredCase\"),\n          this.stateData[2][1],\n        ],\n        [\n          this.returnTranslatedString(\"graph.deceasedCase\"),\n          this.stateData[3][1],\n        ],\n      ];\n      this.selectedStateOption.value = this.returnTranslatedString(\"tableColumn.\"+this.selectedStateOption.key)\n    })\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.stateoptions.filter((option) =>\n      option.toLowerCase().includes(filterValue)\n    );\n  }\n\n  onOptionSelect(event) {\n    let words = event.split(\" \");\n    this.data = this[words[0]];\n    this.title = `graph.${words[1]}`;\n    //this._translate.get(`graph.${words[1]}`).subscribe((str)=>this.title=str)\n    //this.title = `Number of COVID-19 ${words[1]} ${words[2]}`;\n  }\n  last15Days(event) {\n    this.data = this.data.slice(this.data.length - 15, this.data.length);\n    //this.title = this.title\n    // this.title = this.title.includes(\" in last 15 days\")\n    //   ? this.title\n    //   : this.title + \" in last 15 days\";\n  }\n  initilizeDailyGraphData(data) {\n    this.data = data;\n  }\n\n  onStateChange(event) {\n    this.stateData = [\n      [this.returnTranslatedString(\"graph.activeCase\"), this.stateObject[event.option.value].active],\n      [this.returnTranslatedString(\"graph.confirmedCase\"), this.stateObject[event.option.value].confirmed],\n      [this.returnTranslatedString(\"graph.recoveredCase\"), this.stateObject[event.option.value].recovered],\n      [this.returnTranslatedString(\"graph.deceasedCase\"), this.stateObject[event.option.value].deceased],\n    ];\n    this.selectedStateOption = {key: event.option.value, value:this.returnTranslatedString(\"tableColumn.\" + event.option.value)};\n    this.stateTitle =\"tableColumn.\" + event.option.value;\n  }\n\n  returnTranslatedString(key) {\n    let convertedValue;\n    this._translate.get(key).subscribe((str) => (convertedValue = str));\n    return convertedValue;\n  }\n}\n\n// https://www.codeandweb.com/babeledit/tutorials/how-to-translate-your-angular-app-with-ngx-translate\n","<mat-card class=\"example-card\">\n  <div *ngIf=\"isGraphError; else dispGraph\">\n    <mat-card-title>{{(\"graph.graphHeading\" | translate) + \" - \"+ (\"country\" | translate)}}</mat-card-title>\n    <p class=\"dispError\">{{\"errorMessage\" | translate}}</p>\n  </div>\n  <ng-template #dispGraph>\n    <mat-card-header>\n      <mat-card-title>{{(\"graph.graphHeading\" | translate) + \" - \"+ (\"country\" | translate)}}</mat-card-title>\n    </mat-card-header>\n    <div *ngIf=\"data.length === 0; else showGraph\" class=\"textCenter\">\n      <mat-spinner></mat-spinner>\n    </div>\n\n    <ng-template #showGraph>\n      <div class=\"graphId1\">\n        <google-chart\n          [title]=\"title | translate\"\n          [type]=\"type\"\n          [data]=\"data\"\n          [options]=\"options\"\n          [width]=\"width\"\n          [height]=\"height\"\n        >\n        </google-chart>\n      </div>\n    </ng-template>\n\n    <mat-card-actions class=\"display-flex spaceBetween\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>{{\"graph.selectAttribute\" | translate}}</mat-label>\n        <mat-select\n          matNativeControl\n          (valueChange)=\"onOptionSelect($event)\"\n          [value]=\"'confirmData confirmedCase'\"\n        >\n          <mat-option value=\"confirmData confirmedCase\" selected\n            >{{\"graph.confirmedCase\" | translate}}</mat-option\n          >\n          <mat-option value=\"recoveredData recoveredCase\"\n            >{{\"graph.recoveredCase\" | translate}}</mat-option\n          >\n          <mat-option value=\"deceasedData deceasedCase\"\n            >{{\"graph.deceasedCase\" | translate}}</mat-option\n          >\n        </mat-select>\n      </mat-form-field>\n\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"last15Days($event)\"\n        class=\"btn\"\n      >\n      {{\"graph.last15Days\" | translate}}\n      </button>\n    </mat-card-actions>\n  </ng-template>\n</mat-card>\n\n<mat-card class=\"example-card margin-top-10px\">\n  <div *ngIf=\"isStateGraphError; else dispStateGraph\">\n    <mat-card-title>{{(\"graph.graphHeading\" | translate) + \" - \"+ (\"country\" | translate)}}</mat-card-title>\n    <p class=\"dispError\">>{{\"errorMessage\" | translate}}</p>\n  </div>\n  <ng-template #dispStateGraph>\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>{{(\"graph.graphHeading\" | translate) + \" - \"+ (\"country\" | translate)}}</mat-card-title>\n    </mat-card-header>\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width padding-sides-1rem\">\n        <input\n          type=\"text\"\n          placeholder=\"{{'graph.selectState' | translate}}\"\n          aria-label=\"Number\"\n          matInput\n          [formControl]=\"myControl\"\n          [matAutocomplete]=\"auto\"\n          [(ngModel)]=\"selectedStateOption.value\"\n        />\n        <mat-autocomplete\n          #auto=\"matAutocomplete\"\n          (optionSelected)=\"onStateChange($event)\"\n        >\n          <mat-option\n            *ngFor=\"let option of filteredOptions | async\"\n            [value]=\"option\"\n          >\n            {{\"tableColumn.\" + option | translate}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n    <div *ngIf=\"stateData.length === 0; else showStateGraph\" class=\"textCenter\">\n      <mat-spinner></mat-spinner>\n    </div>\n    <ng-template #showStateGraph>\n      <div class=\"graphId2\">\n        <google-chart\n          [title]=\"(stateTitle | translate) +' ' +('graph.graphHeading' | translate)\"\n          [type]=\"stateType\"\n          [data]=\"stateData\"\n          [options]=\"stateoptions\"\n          [width]=\"width\"\n          [height]=\"height\"\n        >\n        </google-chart>\n      </div>\n    </ng-template>\n  </ng-template>\n</mat-card>\n<!-- \"[stateoptions[0] | translate, stateoptions[1] | translate, stateoptions[2] | translate, stateoptions[3] | translate] -->","import { Component, Input, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport {supporedLanguages} from \"../../app.constants\";\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: \"app-header-nav\",\n  templateUrl: \"./header-nav.component.html\",\n  styleUrls: [\"./header-nav.component.scss\"],\n})\nexport class HeaderNavComponent implements OnInit {\n  @Input() columnsToDisplay;\n  @Input() stateNameToDisplay;\n  @Input() showStateGraph;\n  @Input() displayBackButton;\n  @Input() backToUrl;\n  @Input() isState;\n  languageArray=supporedLanguages;\n\n  ngOnInit() {\n    //const browserLang = this.translateService.getBrowserLang();\n    // if(supporedLanguages.indexOf(browserLang) > -1){\n    //   this.translateService.setDefaultLang(browserLang);\n    // } else {\n      this.translateService.setDefaultLang('en');\n    // }\n  }\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private route: Router,\n    private translateService: TranslateService\n  ) {}\n  \n\n  onClickBackButton() {\n    this.route.navigate([this.backToUrl]);\n  }\n\n  onLanguageChange(language: string){\n    this.translateService.use(language);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    position=\"end\"\n    [fixedInViewport]=\"false\"\n    [mode]=\"'over'\"\n  >\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/homepage\">Home</a>\n      <a mat-list-item routerLink=\"/aboutcovid\">About Covid-19</a>\n      <!-- <a mat-list-item routerLink=\"#\">Help</a> -->\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\" class=\"display-flex\">\n      <button\n        type=\"button\"\n        aria-label=\"toolbar back button\"\n        mat-icon-button\n        *ngIf=\"displayBackButton\"\n        (click)= \"onClickBackButton()\"\n      >\n      <mat-icon>arrow_back_ios</mat-icon>\n      </button>\n      <span>Covid-app</span>\n      <div class=\"menuBtns\">\n      <app-menu [initialValue]=\"'en'\" [options]=\"languageArray\" (onItemSelect)=\"onLanguageChange($event)\"></app-menu>\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        class=\"\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n    </div>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"65%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxFlex.md=\"100%\">\n        <app-table-view\n          [columnsToDisplay]=\"columnsToDisplay\"\n          [isState]=\"isState\"\n          [stateNameToDisplay]=\"stateNameToDisplay\"\n          [disableRowClick]=\"showStateGraph\"\n        ></app-table-view>\n      </div>\n      <div fxFlex=\"35%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxFlex.md=\"100%\">\n        <div *ngIf=\"showStateGraph; else indaGraphs\">\n          <app-state-graph></app-state-graph>\n        </div>\n        <ng-template #indaGraphs>\n          <app-graphs></app-graphs>\n        </ng-template>\n      </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { map } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { CovidApiService } from '../../services/covid-api.service'\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor(private _covidAPI: CovidApiService) { }\n  columnsToDisplay = [\"State\", \"Confirmed\", \"Active\", \"Recovered\", \"Deceased\"];\n  ngOnInit(): void {\n\n    }\n\n}\n","<app-header-nav [columnsToDisplay]=\"columnsToDisplay\"></app-header-nav>","import { Component, OnInit, AfterViewChecked,ChangeDetectorRef } from \"@angular/core\";\nimport { CovidApiService } from \"../../services/covid-api.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\n@Component({\n  selector: \"app-state-graph\",\n  templateUrl: \"./state-graph.component.html\",\n  styleUrls: [\"./state-graph.component.scss\"],\n})\nexport class StateGraphComponent implements OnInit,AfterViewChecked {\n  chart = [];\n  constructor(\n    private _covidAPI: CovidApiService,\n    private router: ActivatedRoute,\n    private cdRef: ChangeDetectorRef,\n    private _translate: TranslateService\n  ) {}\n\n  width = (window.innerWidth >1279) ? window.innerWidth *0.30 :window.innerWidth*0.8;\n  height = (window.innerWidth >1279) ? window.innerHeight *0.4 :window.innerHeight*0.35;\n\n  districtTitle = \"COVID-19 information in\";\n  districtType = \"BarChart\";\n  districtData = [];\n  districtGraphOptions = {};\n\n  districtActiveCases = 0;\n  districtName = \"\";\n  districtConfirmed = 0;\n  districtRecovered = 0;\n  districtDeceased = 0;\n  districtObject = {};\n  stateName = \"\";\n\n  myControl = new FormControl();\n  stateoptions: string[] = [];\n  filteredOptions: Observable<string[]>;\n  selectedDistrict = {key:\"\",value:\"\"};\n\n  isGraphError = false;\n  ngOnInit(): void {\n    this.stateName = this.router.snapshot.params.name;\n\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n        let districtsObj = res[this.stateName][\"districtData\"];\n        this.districtObject = districtsObj;\n        this.stateoptions = Object.keys(districtsObj);\n        console.log(this.stateoptions)\n        this.districtData = [\n          [this.returnTranslatedString(\"graph.activeCase\"), districtsObj[this.stateoptions[0]].active],\n          [this.returnTranslatedString(\"graph.confirmedCase\"), districtsObj[this.stateoptions[0]].confirmed],\n          [ this.returnTranslatedString(\"graph.recoveredCase\"), districtsObj[this.stateoptions[0]].recovered],\n          [this.returnTranslatedString(\"graph.deceasedCase\"), districtsObj[this.stateoptions[0]].deceased],\n        ];\n        this.districtTitle = `stateColumn.${this.stateName}.${this.stateoptions[0]}` ;\n        this.selectedDistrict = { key:this.stateoptions[0], value: this.returnTranslatedString(`stateColumn.${this.stateName}.${this.stateoptions[0]}`) };\n      },\n      (err) => {\n        this.isGraphError = true;\n      }\n    );\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(\"\"),\n      map((value) => this._filter(value))\n    );\n  }\n\n  ngAfterViewChecked(): void {\n    this.cdRef.detectChanges();\n    this.districtData && this._translate.onLangChange.subscribe(()=>{\n      this.selectedDistrict.value = this.returnTranslatedString(`stateColumn.${this.stateName}.${this.selectedDistrict.key}`)\n      this.districtData = [\n        [this.returnTranslatedString(\"graph.activeCase\"), this.districtData[0][1]],\n        [\n          this.returnTranslatedString(\"graph.confirmedCase\"),\n          this.districtData[1][1],\n        ],\n        [\n          this.returnTranslatedString(\"graph.recoveredCase\"),\n          this.districtData[2][1],\n        ],\n        [\n          this.returnTranslatedString(\"graph.deceasedCase\"),\n          this.districtData[3][1],\n        ],\n      ];\n    })\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.stateoptions.filter((option) =>\n      option.toLowerCase().includes(filterValue)\n    );\n  }\n\n  onStateChange(event) {\n    this.districtData = [\n      [this.returnTranslatedString(\"graph.activeCase\"), this.districtObject[event.option.value].active],\n      [this.returnTranslatedString(\"graph.confirmedCase\"), this.districtObject[event.option.value].confirmed],\n      [this.returnTranslatedString(\"graph.recoveredCase\"), this.districtObject[event.option.value].recovered],\n      [this.returnTranslatedString(\"graph.deceasedCase\"), this.districtObject[event.option.value].deceased],\n    ];\n    this.selectedDistrict.key = event.option.value;\n    this.selectedDistrict.value = this.returnTranslatedString( `stateColumn.${this.stateName}.${event.option.value}`);\n    this.districtTitle = `stateColumn.${this.stateName}.${event.option.value}`;\n  }\n\n  returnTranslatedString(key) {\n    let convertedValue;\n    this._translate.get(key).subscribe((str) => (convertedValue = str));\n    return convertedValue;\n  }\n}\n","<mat-card class=\"example-card margin-1rem\">\n  <div *ngIf=\"isGraphError; else dispGraph\">\n    <mat-card-title>Covid-19 Cases in India</mat-card-title>\n    <p class=\"dispError\">Something went wrong, please try again later</p>\n  </div>\n  <ng-template #dispGraph>\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>{{(\"graph.graphHeading\" | translate) +\" - \"+ (\"tableColumn.\"+ stateName | translate)}}</mat-card-title>\n    </mat-card-header>\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width padding-sides-1rem\">\n        <input\n          type=\"text\"\n          placeholder=\"{{'graph.selectDistrict' | translate}}\"\n          aria-label=\"Number\"\n          matInput\n          [formControl]=\"myControl\"\n          [matAutocomplete]=\"auto\"\n          [(ngModel)]=\"selectedDistrict.value\"\n        />\n        <mat-autocomplete\n          #auto=\"matAutocomplete\"\n          (optionSelected)=\"onStateChange($event)\"\n        >\n          <mat-option\n            *ngFor=\"let option of filteredOptions | async\"\n            [value]=\"option\"\n          >\n            {{ 'stateColumn.'+this.stateName+'.'+option | translate }}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n    <div *ngIf=\"districtData.length === 0; else showGraph\" class=\"textCenter\">\n      <mat-spinner></mat-spinner>\n    </div>\n    <ng-template #showGraph>\n      <div class=\"graphId\">\n        <google-chart\n          [title]=\"(districtTitle | translate) +' ' +('graph.graphHeading' | translate)\"\n          [type]=\"districtType\"\n          [data]=\"districtData\"\n          [options]=\"stateoptions\"\n          [width]=\"width\"\n          [height]=\"height\"\n        >\n        </google-chart>\n      </div>\n    </ng-template>\n  </ng-template>\n</mat-card>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n@Component({\n  selector: \"app-states\",\n  templateUrl: \"./states.component.html\",\n  styleUrls: [\"./states.component.scss\"],\n})\nexport class StatesComponent implements OnInit {\n  constructor(private router: ActivatedRoute) {}\n  stateName;\n  columnsToDisplay = [\n    \"District\",\n    \"Confirmed\",\n    \"Active\",\n    \"Recovered\",\n    \"Deceased\",\n  ];\n  ngOnInit(): void {\n    this.stateName = this.router.snapshot.params.name;\n  }\n}\n","<app-header-nav\n  [columnsToDisplay]=\"columnsToDisplay\"\n  [isState]=\"true\"\n  [stateNameToDisplay]=\"stateName\"\n  [showStateGraph]=\"true\"\n  [displayBackButton]=\"true\"\n  [backToUrl]=\"'/homepage'\"\n></app-header-nav>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CovidApiService } from '../../services/covid-api.service'\nimport { Router,ActivatedRoute } from '@angular/router';\nimport {Sort} from '@angular/material/sort';\n@Component({\n  selector: 'app-table-view',\n  templateUrl: './table-view.component.html',\n  styleUrls: ['./table-view.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TableViewComponent implements OnInit {\n  @Input() columnsToDisplay;\n  @Input() stateNameToDisplay;\n  @Input() disableRowClick;\n  @Input() isState;\n  rows = [];\n  delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n  State = \"\"\n  Confirmed = 0\n  Recovered = 0\n  Active = 0\n  Deceased = 0\n  description = \"\"\n  dataSource\n  expandedElement: StateCases | null;\n  constructor(private _covidAPI: CovidApiService, private _router: Router,private router: ActivatedRoute) {}\n  initilizeData(data) {\n    this.dataSource = new MatTableDataSource(data);\n  }\n  getStateDetails() {\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n        switch (this.columnsToDisplay[0]) {\n          case \"District\":\n            let districtsObj = res[this.stateNameToDisplay][\"districtData\"]\n            this.rows = new Array([])\n            this.delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n            for (let i in districtsObj) {\n              //console.log(districtsObj[i][\"delta\"])\n              this.delta[\"Confirmed\"] = districtsObj[i][\"delta\"][\"confirmed\"]\n              //this.delta[\"Active\"] = parseInt(this.delta[\"Active\"] )+ parseInt(res[key][district][city][\"delta\"][\"active\"])\n              this.delta[\"Recovered\"] = (districtsObj[i][\"delta\"][\"recovered\"])\n              this.delta[\"Deceased\"] = (districtsObj[i][\"delta\"][\"recovered\"])\n              this.rows.push({\n                District: i, Confirmed: districtsObj[i]['confirmed'], Active: districtsObj[i]['active'], Recovered: districtsObj[i]['recovered'],\n                Deceased: districtsObj[i]['deceased'], description: \"some\", \"delta\": this.delta\n              })\n            }\n\n            this.rows.shift()\n            //console.log(this.rows)\n            this.rows.sort((a,b)=>a.Confiirmed-b.Confirmed);\n            this.initilizeData(this.rows.reverse())\n            break;\n          case \"State\":\n            Object.keys(res).forEach(key => {\n              if (key !== \"State Unassigned\") {\n                this.State = key\n                this.Active = 0\n                this.Confirmed = 0\n                this.Recovered = 0\n                this.Deceased = 0\n                this.delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n                Object.keys(res[key]).forEach(district => {\n                  if (district === \"districtData\") {\n                    Object.keys(res[key][district]).forEach(city => {\n                      //console.log(res[key][district][city]);\n                      this.Active = this.Active + res[key][district][city][\"active\"];\n                      this.Confirmed = this.Confirmed + res[key][district][city][\"confirmed\"];\n                      this.Recovered = this.Recovered + res[key][district][city][\"recovered\"];\n                      this.Deceased = this.Deceased + res[key][district][city][\"deceased\"]\n                      //console.log(this.delta[\"Confirmed\"])\n                      //console.log(res[key][district][city][\"delta\"])\n                      this.delta[\"Confirmed\"] = this.delta[\"Confirmed\"] + parseInt(res[key][district][city][\"delta\"][\"confirmed\"])\n                      //this.delta[\"Active\"] = parseInt(this.delta[\"Active\"] )+ parseInt(res[key][district][city][\"delta\"][\"active\"])\n                      this.delta[\"Recovered\"] = (this.delta[\"Recovered\"]) + parseInt(res[key][district][city][\"delta\"][\"recovered\"])\n                      this.delta[\"Deceased\"] = (this.delta[\"Deceased\"]) + parseInt(res[key][district][city][\"delta\"][\"deceased\"])\n                    })\n                  }\n                })\n                this.rows.push(new Object({\n                  State: this.State, Confirmed: (this.Confirmed), Active: (this.Active),\n                  Recovered: (this.Recovered), Deceased: (this.Deceased), description: \"some\",\n                  delta: { Confirmed: this.delta[\"Confirmed\"], Recovered: this.delta[\"Recovered\"], Deceased: this.delta[\"Deceased\"] }\n                }));\n              }\n            })\n            this.rows.sort((a,b)=>a.Confirmed-b.Confirmed);\n            this.initilizeData(this.rows.reverse())\n            break;\n\n        }\n      })\n  }\n  ngOnInit() {\n    this.rows.splice(0, this.rows.length)\n    this.getStateDetails()\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  openStateDetails(event, row) {\n    this._router.navigate(['/states/' + row.State])\n  }\n  convertNumberIntoK(value) {\n    if (value >= 1000000) {\n      value = Math.round(value / 1000000) + \"M\"\n      return value;\n    }\n    else if (value >= 1000) {\n      value = Math.round(value / 1000) + \"K\";\n      return value\n    } else if(!isNaN(value)) {\n      return value;\n    }\n    return !this.stateNameToDisplay ? (\"tableColumn.\" + value) : (`stateColumn.${this.stateNameToDisplay}.${value}`);\n  }\n\n  sortData(sort: Sort) {\n    const data = this.rows.slice();\n    if (!sort.active || sort.direction === '') {\n      this.initilizeData(this.rows);\n      return;\n    }\n\n    this.rows = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'State': return compare(a.State, b.State, isAsc);\n        case 'District': return compare(a.District, b.District, isAsc);\n        case 'Confirmed': return compare(a.Confirmed, b.Confirmed, isAsc);\n        case 'Active': return compare(a.Active, b.Active, isAsc);\n        case 'Recovered': return compare(a.Recovered, b.Recovered, isAsc);\n        case 'Deceased': return compare(a.Deceased, b.Deceased, isAsc);\n        default: return 0;\n      }\n    });\n    this.initilizeData(this.rows)\n  }\n\n}\n\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\nexport interface StateCases {\n  State: string;\n  Confirmed: number;\n  Active: number;\n  Recovered: number;\n  Deceased: number;\n}\n","<form class=\"display-flex\">\n  <mat-form-field>\n    <mat-label *ngIf=\"disableRowClick; else elseState\"\n      >{{'graph.selectDistrict'|translate}}</mat-label\n    >\n    <ng-template #elseState>\n      <mat-label>{{'graph.selectState' | translate}}</mat-label>\n    </ng-template>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"\"\n      #input\n    />\n  </mat-form-field>\n  <!-- <button mat-raised-button color=\"primary\" class=\"menuBtn\" [matMenuTriggerFor]=\"menu\">Menu</button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item (click)=\"onSortByName()\">Sort By Name</button>\n    <button mat-menu-item (click)=\"onSortByCases()\" >Sort By Cases</button>\n  </mat-menu> -->\n</form>\n<table\n  mat-table\n  [dataSource]=\"dataSource\"\n  multiTemplateDataRows\n  class=\"mat-elevation-z8\"\n  matSort\n  (matSortChange)=\"sortData($event)\"\n  class=\"tableView\"\n>\n  <ng-container\n    matColumnDef=\"{{ column }}\"\n    *ngFor=\"let column of columnsToDisplay\"\n  >\n    <th\n      mat-header-cell\n      *matHeaderCellDef\n      class=\"columHeader mobileView\"\n      [mat-sort-header]=\"column\"\n    >\n      {{ 'tableHeader.'+column.toLowerCase()  | translate}}\n    </th>\n    <td mat-cell *matCellDef=\"let element\">\n      <!-- <div [matTooltip]=\"element[column]\" [matTooltipPosition]=\"\" aria-label=\"Button that displays a tooltip when focused or hovered over\">\n      <span class=\"deltaValue\" *ngIf=\"element['delta'][column]>0\"><mat-icon class=\"iconId\">arrow_upward</mat-icon>{{element['delta'][column]}}</span>\n      {{ convertNumberIntoK(element[column])}} \n          </div> -->\n      <mat-list role=\"list\">\n        <div *ngIf=\"element['delta']['Confirm'] > 0; else noRowReq\">\n          <div *ngIf=\"element['delta'][column] > 0; else nonDelta\">\n            <mat-list-item\n              role=\"listitem\"\n              class=\"reduceMargin mobileView tableRows\"\n            >\n              {{ convertNumberIntoK(element[column]) | translate}}</mat-list-item\n            >\n            <mat-list-item\n              role=\"listitem\"\n              class=\"reduceMargin mobileView tableRows\"\n            >\n              {{ element[\"delta\"][column] }}\n            </mat-list-item>\n          </div>\n          <ng-template #nonDelta>\n            <mat-list-item\n              role=\"listitem\"\n              class=\"reduceMargin mobileView tableRows\"\n            >\n              {{  convertNumberIntoK(element[column]) | translate}}\n            </mat-list-item>\n            <mat-list-item\n              role=\"listitem\"\n              class=\"reduceMargin mobileView tableRows\"\n            >\n              {{  convertNumberIntoK(element[column]) | translate}}\n            </mat-list-item>\n          </ng-template>\n        </div>\n        <ng-template #noRowReq>\n          <mat-list-item\n            role=\"listitem\"\n            class=\"reduceMargin mobileView tableRows\"\n          >\n          {{   convertNumberIntoK(element[column]) | translate }}\n            <!-- {{ Object.prototype.toString.call((element[column]) === '[object String]' ? ('tableColumn.' + element[column] | translate) : convertNumberIntoK(element[column]) }} -->\n          </mat-list-item>\n        </ng-template>\n      </mat-list>\n    </td>\n  </ng-container>\n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td\n      mat-cell\n      *matCellDef=\"let element\"\n      [attr.colspan]=\"columnsToDisplay.length\"\n    >\n      <div\n        class=\"example-element-detail\"\n        [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\"\n      >\n        <div class=\"example-element-description marginRight\">\n          <button\n            mat-stroked-button\n            color=\"primary\"\n            class=\"tableBtn\"\n            (click)=\"openStateDetails($event, element)\"\n          >\n            <mat-icon class=\"icon-display\">description</mat-icon> view district\n            level status\n          </button>\n          <!-- <span class=\"example-element-description-attribution\"> </span> -->\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr\n    mat-row\n    *matRowDef=\"let element; columns: columnsToDisplay\"\n    class=\"example-element-row\"\n    [class.example-expanded-row]=\"expandedElement === element\"\n    (click)=\"expandedElement = expandedElement === element ? null : element\"\n  ></tr>\n  <div *ngIf=\"!disableRowClick\">\n    <tr\n      mat-row\n      *matRowDef=\"let row; columns: ['expandedDetail']\"\n      class=\"example-detail-row\"\n    ></tr>\n  </div>\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">\n      No data matching the filter \"{{ input.value }}\"\n    </td>\n  </tr>\n</table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidApiService {\n  private _registerUrl = \"https://api.covid19india.org\"; \n  constructor(private http: HttpClient) { }\n  getStates() {\n    return this.http.get<any>(this._registerUrl+\"/state_district_wise.json\");\n  }\n  getCasesByDate(){\n    return this.http.get<any>(this._registerUrl+\"/data.json\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}